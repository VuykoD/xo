{"version":3,"sources":["LevelButton.js","App.js","serviceWorker.js","index.js"],"names":["LevelButtons","props","ctx","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","level","changeLevel","bind","assertThisInitialized","setState","click","react_default","a","createElement","LevelButton_LevelButton","name","onClick","Component","LevelButton","_this2","className","App","gameInit","localStorage","getItem","userSign","compSign","firstStep","yourWin","compWin","restart","changeFirstStep","setItem","cells","gameContinue","gameStarted","x","checkWin","computerMove","forceUpdate","checkCoinsedence","x1","x2","x3","signal","winer","setTimeout","alert","randomCell","twoOfThree","block","analize","compMove","hardCompMove","findTwoOfThree","number","i","Math","floor","random","undefined","numberCell","userMove","_this3","style","width","LevelButton_LevelButtons","cell","changeUserSing","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cbba50c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class LevelButtons extends Component {\r\n  constructor (props, ctx) {\r\n    super(props, ctx);\r\n    this.state = {\r\n      level: \"easy\",\r\n    };\r\n    this.changeLevel = this.changeLevel.bind(this);\r\n  }\r\n\r\n  changeLevel(level){\r\n    this.setState({\r\n      level\r\n    })\r\n    this.props.click(level);\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <span>Level</span>\r\n        <br />\r\n        <LevelButton\r\n          name={this.state.level}\r\n          onClick={this.changeLevel}\r\n          level='easy'\r\n        />\r\n        <LevelButton\r\n          name={this.state.level}\r\n          onClick={this.changeLevel}\r\n          level='middle'\r\n        />\r\n        <LevelButton\r\n          name={this.state.level}\r\n          onClick={this.changeLevel}\r\n          level='hard'\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass LevelButton extends Component {\r\n  render(){\r\n  const level = this.props.level; \r\n  let name = \"btn\";\r\n  if (this.props.name===level) { name = \"btn btn-danger\" }\r\n\r\n  return (\r\n    <button\r\n        className = { name }\r\n        onClick = {() => this.props.onClick(level)}\r\n      >\r\n        { level }\r\n      </button>\r\n  )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport LevelButtons from './LevelButton'\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor (props, ctx) {\r\n    super(props, ctx);\r\n    this.gameInit();\r\n    this.level = localStorage.getItem('level') || 'easy';\r\n    this.state = {\r\n      userSign: 'X',\r\n      compSign: 'O',\r\n      firstStep: 'you',\r\n      yourWin: localStorage.getItem('yourWin') || 0,\r\n      compWin: localStorage.getItem('compWin') || 0,\r\n    };\r\n    this.restart = this.restart.bind(this);\r\n    this.changeFirstStep = this.changeFirstStep.bind(this);\r\n    this.changeLevel = this.changeLevel.bind(this);\r\n  }\r\n\r\n  changeLevel(level) {\r\n    this.level = level;\r\n    localStorage.setItem('level', level);\r\n    //this.restart();\r\n  }\r\n\r\n  gameInit() {\r\n    this.cells = [];\r\n    this.gameContinue = true;\r\n    this.gameStarted = false;\r\n  }\r\n\r\n  userMove(x) {\r\n    this.gameStarted = true;\r\n    if (!this.cells[x] && this.gameContinue) {\r\n      this.cells[x] = 'user';\r\n      this.checkWin();\r\n\r\n      if (this.gameContinue) {\r\n        this.computerMove();\r\n        this.checkWin();\r\n      }\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  checkWin() {\r\n    this.checkCoinsedence(0, 1, 2);\r\n    this.checkCoinsedence(0, 4, 8);\r\n    this.checkCoinsedence(0, 3, 6);\r\n\r\n    this.checkCoinsedence(1, 4, 7);\r\n\r\n    this.checkCoinsedence(2, 4, 6);\r\n    this.checkCoinsedence(2, 5, 8);\r\n\r\n    this.checkCoinsedence(3, 4, 5);\r\n\r\n    this.checkCoinsedence(6, 7, 8);\r\n  }\r\n\r\n  checkCoinsedence(x1, x2, x3) {\r\n    if (this.cells[x1] && this.cells[x1] === this.cells[x2] && this.cells[x1] === this.cells[x3]) {\r\n      this.signal(x1);\r\n    }\r\n  }\r\n\r\n  signal(winer) {\r\n    if (this.cells[winer] === 'user') {\r\n      localStorage.setItem('yourWin', +this.state.yourWin + 1);\r\n      this.setState({\r\n        yourWin: +this.state.yourWin + 1,\r\n      }, () => setTimeout(()=>alert(\"yoy've win\"),100));\r\n    } else if (this.cells[winer] === 'comp') {\r\n      localStorage.setItem('compWin', +this.state.compWin + 1);\r\n      this.setState({\r\n        compWin: +this.state.compWin + 1,\r\n      }, () => setTimeout(()=>alert(\"yoy've lost\"),100));\r\n    }\r\n    this.gameContinue = false;\r\n  }\r\n\r\n  computerMove() {\r\n    this.gameStarted = true;\r\n    switch (this.level) {\r\n      case 'easy':\r\n        this.randomCell();\r\n        break;\r\n      case 'middle':\r\n        this.twoOfThree = false;\r\n        this.block = false;\r\n        this.analize();\r\n        !this.twoOfThree && this.randomCell();\r\n        break;\r\n      case 'hard':\r\n        this.twoOfThree = false;\r\n        this.block=false;\r\n        this.analize();\r\n        this.compMove = true;\r\n        if (!this.twoOfThree) {\r\n          this.hardCompMove(4);\r\n          this.hardCompMove(0, 8);\r\n          this.hardCompMove(2, 6, 1);\r\n          this.hardCompMove(6, 2, 3);\r\n          this.hardCompMove(3, 5);\r\n          this.hardCompMove(1, 7);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  hardCompMove(x1, x2, x3) {\r\n    if (this.compMove && !this.cells[x1] && !this.cells[x2] && !this.cells[x3]) {\r\n      this.compMove = false;\r\n      return this.cells[x1] = 'comp';\r\n    }\r\n  }\r\n\r\n  analize() {\r\n    this.findTwoOfThree(0, 1, 2);\r\n    this.findTwoOfThree(0, 2, 1);\r\n    this.findTwoOfThree(0, 3, 6);\r\n    this.findTwoOfThree(0, 6, 3);\r\n    this.findTwoOfThree(0, 4, 8);\r\n    this.findTwoOfThree(0, 8, 4);\r\n\r\n    this.findTwoOfThree(1, 2, 0);\r\n    this.findTwoOfThree(1, 4, 7);\r\n    this.findTwoOfThree(1, 7, 4);\r\n\r\n    this.findTwoOfThree(2, 4, 6);\r\n    this.findTwoOfThree(2, 6, 4);\r\n    this.findTwoOfThree(2, 5, 8);\r\n    this.findTwoOfThree(2, 8, 5);\r\n\r\n    this.findTwoOfThree(3, 4, 5);\r\n    this.findTwoOfThree(3, 5, 4);\r\n    this.findTwoOfThree(3, 6, 0);\r\n\r\n    this.findTwoOfThree(4, 5, 3);\r\n    this.findTwoOfThree(4, 6, 2);\r\n    this.findTwoOfThree(4, 7, 1);\r\n    this.findTwoOfThree(4, 8, 0);\r\n\r\n    this.findTwoOfThree(5, 8, 2);\r\n\r\n    this.findTwoOfThree(6, 7, 8);\r\n    this.findTwoOfThree(6, 8, 7);\r\n\r\n    this.findTwoOfThree(7, 8, 6);\r\n  }\r\n\r\n  findTwoOfThree(x1, x2, x3) {\r\n    if (this.cells[x1] && !this.cells[x3] && this.cells[x1] === this.cells[x2] && !this.block) {\r\n      this.cells[x3] = 'comp';\r\n      this.block = true;\r\n      this.twoOfThree = true;\r\n    }\r\n  }\r\n\r\n  randomCell() {\r\n    let number = null;\r\n    for (let i = 0; i < 1000; i++) {\r\n      number = Math.floor(Math.random() * 9);\r\n      if (this.cells[number] === undefined) return this.cells[number] = 'comp';\r\n    }\r\n  }\r\n\r\n  changeUserSing() {\r\n    this.setState({\r\n      userSign: this.state.compSign,\r\n      compSign: this.state.userSign,\r\n    });\r\n  }\r\n\r\n  changeFirstStep() {\r\n    if (this.state.firstStep === 'you') {\r\n      this.setState({\r\n        firstStep: 'comp',\r\n      });\r\n      if (!this.gameStarted) {this.computerMove();}\r\n    } else {\r\n      this.setState({\r\n        firstStep: 'you',\r\n      });\r\n    }\r\n  }\r\n\r\n    // if (level === this.level) { name = 'btn btn-danger'}\r\n\r\n  cell(numberCell) {\r\n    let name = 'borderRight';\r\n    if (numberCell === 2 || numberCell === 5 || numberCell === 8) { name = null }\r\n\r\n    return (\r\n      <td\r\n        className={name}\r\n        onClick={() => this.userMove(numberCell)}\r\n      >\r\n        {(this.cells[numberCell] === 'user') && this.state.userSign}\r\n        {(this.cells[numberCell] === 'comp') && this.state.compSign}\r\n      </td>\r\n    );\r\n  }\r\n\r\n  restart() {\r\n    this.gameInit();\r\n    this.forceUpdate();\r\n    if (this.state.firstStep === 'comp'){\r\n      this.computerMove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <center>\r\n        <div className=\"container\">\r\n          <span>Score</span>\r\n          <br />\r\n          <span>\r\n            You {this.state.yourWin} - {this.state.compWin} comp\r\n          </span>\r\n          <br />\r\n          <button\r\n            onClick={this.restart}\r\n            className=\"btn btn-info\"\r\n            style={{ width: '200px' }}\r\n          >\r\n            Restart\r\n          </button>\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1\" />\r\n            <div className=\"col-md-3\">\r\n              <LevelButtons\r\n                click={this.changeLevel}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <table>\r\n                <tbody>\r\n                  <tr className=\"borderBottom\">\r\n                    {this.cell(0)}\r\n                    {this.cell(1)}\r\n                    {this.cell(2)}\r\n                  </tr>\r\n                  <tr className=\"borderBottom\">\r\n                    {this.cell(3)}\r\n                    {this.cell(4)}\r\n                    {this.cell(5)}\r\n                  </tr>\r\n                  <tr>\r\n                    {this.cell(6)}\r\n                    {this.cell(7)}\r\n                    {this.cell(8)}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <span>First step</span>\r\n              <br />\r\n              <button\r\n                className=\"btn\"\r\n                onClick={this.changeFirstStep}\r\n              >\r\n                {this.state.firstStep}\r\n              </button>\r\n              <br />\r\n              <span>Change sign</span>\r\n              <br />\r\n              <button\r\n                className=\"btn btn45\"\r\n                onClick={() => this.changeUserSing()}\r\n              >\r\n                You - {this.state.userSign}\r\n              </button>\r\n              <button\r\n                className=\"btn btn45\"\r\n                onClick={() => this.changeUserSing()}\r\n              >\r\n                Computer - {this.state.compSign}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-1\" />\r\n          </div>\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}