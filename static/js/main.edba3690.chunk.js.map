{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","ctx","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cells","gameContinue","twoOfThree","state","userSign","compSign","firstStep","level","localStorage","getItem","yourWin","compWin","changeFirstStep","bind","assertThisInitialized","x","checkWin","computerMove","forceUpdate","checkCoinsedence","x1","x2","x3","signal","winer","setItem","setState","alert","randomCell","block","analize","compMove","hardCompMove","findTwoOfThree","number","i","Math","floor","random","undefined","_this2","name","react_default","a","createElement","className","onClick","changeLevel","numberCell","_this3","userMove","_this4","reload","style","width","buttons","cell","changeUserSing","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edba3690.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props, ctx) {\n    super(props, ctx);\n    this.cells=[];\n    this.gameContinue=true;\n    this.twoOfThree=false;\n    this.state = {\n      userSign:\"X\",\n      compSign:\"O\",\n      firstStep:\"you\",\n      level:localStorage.getItem('level') || \"easy\",\n      yourWin:localStorage.getItem('yourWin') || 0,\n      compWin:localStorage.getItem('compWin') || 0\n    };\n    this.changeFirstStep=this.changeFirstStep.bind(this)\n  }\n\n  userMove(x){\n    if (!this.cells[x] && this.gameContinue){\n      this.cells[x]=\"user\";\n      this.checkWin();\n\n      if (this.gameContinue){\n        this.computerMove();\n        this.checkWin();\n      }\n      this.forceUpdate();\n    }\n  }\n\n  checkWin(){\n    this.checkCoinsedence(0,1,2);\n    this.checkCoinsedence(0,4,8);\n    this.checkCoinsedence(0,3,6);\n\n    this.checkCoinsedence(1,4,7);\n\n    this.checkCoinsedence(2,4,6);\n    this.checkCoinsedence(2,5,8);\n\n    this.checkCoinsedence(3,4,5);\n\n    this.checkCoinsedence(6,7,8)\n  }\n\n  checkCoinsedence(x1,x2,x3){\n    if (this.cells[x1] && this.cells[x1]===this.cells[x2] && this.cells[x1]===this.cells[x3]) this.signal(x1)\n  }\n\n  signal(winer){\n    if (this.cells[winer]===\"user\")  {\n      localStorage.setItem('yourWin',+this.state.yourWin+1);\n      this.setState({\n        yourWin:+this.state.yourWin+1\n      }, () => alert(\"yoy've win\"));\n    } else if (this.cells[winer]===\"comp\") {\n      localStorage.setItem('compWin',+this.state.compWin+1);\n      this.setState({\n        compWin:+this.state.compWin+1\n      }, () => alert(\"yoy've lost\"));\n    }\n    this.gameContinue=false\n  }\n\n  computerMove(){\n    switch (this.state.level) {\n      case 'easy':\n        this.randomCell();\n        break;\n      case 'middle':\n        this.twoOfThree=false;\n        this.block=false;\n        this.analize();\n        !this.twoOfThree && this.randomCell();\n        break;\n      case 'hard':\n        this.twoOfThree=false;\n        this.block=false;\n        this.analize();\n        this.compMove=true;\n        if (!this.twoOfThree) {\n          this.hardCompMove(4);\n          this.hardCompMove(0,8);\n          this.hardCompMove(2,6,1);\n          this.hardCompMove(6,2,3);\n          this.hardCompMove(3,5);\n          this.hardCompMove(1,7)\n        }\n    }\n  }\n\n  hardCompMove(x1,x2,x3){\n    if (this.compMove && !this.cells[x1] && !this.cells[x2] && !this.cells[x3]) {\n      this.compMove=false;\n      return this.cells[x1] = \"comp\"\n    }\n  }\n\n  analize(){\n    this.findTwoOfThree(0,1,2);\n    this.findTwoOfThree(0,2,1);\n    this.findTwoOfThree(0,3,6);\n    this.findTwoOfThree(0,6,3);\n    this.findTwoOfThree(0,4,8);\n    this.findTwoOfThree(0,8,4);\n\n    this.findTwoOfThree(1,2,0);\n    this.findTwoOfThree(1,4,7);\n    this.findTwoOfThree(1,7,4);\n\n    this.findTwoOfThree(2,4,6);\n    this.findTwoOfThree(2,6,4);\n    this.findTwoOfThree(2,5,8);\n    this.findTwoOfThree(2,8,5);\n\n    this.findTwoOfThree(3,4,5);\n    this.findTwoOfThree(3,5,4);\n    this.findTwoOfThree(3,6,0);\n\n    this.findTwoOfThree(4,5,3);\n    this.findTwoOfThree(4,6,2);\n    this.findTwoOfThree(4,7,1);\n    this.findTwoOfThree(4,8,0);\n\n    this.findTwoOfThree(5,8,2);\n\n    this.findTwoOfThree(6,7,8);\n    this.findTwoOfThree(6,8,7);\n\n    this.findTwoOfThree(7,8,6)\n  }\n\n  findTwoOfThree(x1,x2,x3){\n    if (this.cells[x1] && !this.cells[x3] && this.cells[x1]===this.cells[x2] && !this.block) {\n      this.cells[x3]=\"comp\";\n      this.block=true;\n      this.twoOfThree=true\n    } \n  }\n\n  randomCell(){\n     let number=null;\n      for (let i=0;i<1000;i++){\n       number=Math.floor(Math.random() * 9);\n       if (this.cells[number]===undefined) return this.cells[number]=\"comp\";\n      }\n  }\n\n  changeUserSing(){\n    this.setState({\n        userSign:this.state.compSign,\n        compSign:this.state.userSign,\n      })\n  }\n\n  changeFirstStep(){\n    if (this.state.firstStep===\"you\"){\n      this.setState({\n        firstStep: \"comp\"\n      });\n      this.computerMove()\n    }\n  }\n\n  buttons(level){\n    let name=\"btn\";\n    if (level===this.state.level) {name=\"btn btn-danger\"}\n    return(\n      <button\n        className={name}\n        onClick={()=>this.changeLevel(level)}\n      >\n        {level}\n      </button>\n      )\n  }\n\n  changeLevel(level){\n    this.setState({\n      level\n    });\n    localStorage.setItem('level',level)\n  }\n\n  cell(numberCell){\n    let name=\"borderRight\";\n    if (numberCell===2 || numberCell===5 || numberCell===8) {name=null}\n\n    return(\n      <td \n        className={name}\n        onClick={()=>this.userMove(numberCell)}\n      > \n        {(this.cells[numberCell]===\"user\") && this.state.userSign}\n        {(this.cells[numberCell]===\"comp\") && this.state.compSign}\n        {(this.cells[numberCell]==='') && ''}\n      </td>\n      )\n  }\n\n  reload(){\n    this.cells=[];\n    for (let i=0;i<9;i++){\n      this.cells[i]='';\n    }\n    this.gameContinue=true;\n    this.twoOfThree=false;\n    this.setState ({\n      userSign:\"X\",\n      compSign:\"O\",\n      firstStep:\"you\",\n      level:localStorage.getItem('level') || \"easy\",\n      yourWin:localStorage.getItem('yourWin') || 0,\n      compWin:localStorage.getItem('compWin') || 0\n    });\n  }\n\n  render() {\n    return (\n      <center >\n      <div className=\"container\">\n          <span>Score</span><br/>\n          <span>You  {this.state.yourWin} - {this.state.compWin} comp</span><br/>\n          <button onClick={this.reload} className=\"btn btn-info\" style={{width:\"250px\"}}>Restart</button><br/>\n          <div className=\"row\">\n          <div className=\"col-md-1\"/>\n          <div className=\"col-md-3\">\n            <span>Level</span><br/>\n            {this.buttons(\"easy\")}<br/>\n            {this.buttons(\"middle\")}<br/>\n            {this.buttons(\"hard\")}<br/>\n          </div>\n          <div className=\"col\">\n            <table>\n              <tbody>\n                <tr className=\"borderBottom\">\n                  {this.cell(0)}\n                  {this.cell(1)}\n                  {this.cell(2)}\n                </tr>\n                <tr className=\"borderBottom\">\n                  {this.cell(3)}\n                  {this.cell(4)}\n                  {this.cell(5)}\n                </tr>\n                <tr>\n                  {this.cell(6)}\n                  {this.cell(7)}\n                  {this.cell(8)}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"col-md-3\">\n            <span>First step</span><br/>\n            <button\n              className=\"btn\"\n              onClick={this.changeFirstStep}\n            >{this.state.firstStep}</button>\n            <br/><span>Change sign</span><br/>\n            <button\n              className=\"btn\"\n              onClick={()=>this.changeUserSing()}\n            >You - {this.state.userSign}</button><br/>\n            <button\n              className=\"btn\"\n              onClick={()=>this.changeUserSing()}\n            >Computer - {this.state.compSign}</button>\n          </div> \n          <div className=\"col-md-1\"/>\n        </div>\n      </div>\n      </center>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}