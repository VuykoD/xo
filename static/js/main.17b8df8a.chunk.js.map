{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","ctx","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cells","gameContinue","twoOfThree","state","userSign","compSign","firstStep","level","localStorage","getItem","yourWin","compWin","changeFirstStep","bind","assertThisInitialized","cell","changeLevel","x","checkWin","computerMove","forceUpdate","checkCoinsedence","x1","x2","x3","Signal","winer","setTimeout","alert","setItem","setState","randomCell","block","analize","findTwoOfThree","number","i","Math","floor","random","undefined","_this2","name","react_default","a","createElement","className","onClick","numberCell","_this3","Name","userMove","window","location","reload","_this4","style","width","buttons","changeUserSing","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b8df8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props, ctx) {\n    super(props, ctx);\n    this.cells=[]\n    this.gameContinue=true\n    this.twoOfThree=false\n    this.state = {\n      userSign:\"X\",\n      compSign:\"O\",\n      firstStep:\"you\",\n      level:localStorage.getItem('level') || \"easy\",\n      yourWin:localStorage.getItem('yourWin') || 0,\n      compWin:localStorage.getItem('compWin') || 0\n    }\n    this.changeFirstStep=this.changeFirstStep.bind(this)\n    this.cell=this.cell.bind(this)\n    this.changeLevel=this.changeLevel.bind(this)\n  }\n\n  userMove(x){\n    if (!this.cells[x] && this.gameContinue){\n      this.cells[x]=\"user\"\n      this.checkWin()\n\n      if (this.gameContinue){\n        this.computerMove()\n        this.checkWin()\n      }\n      this.forceUpdate()\n    }\n  }\n\n  checkWin(){\n    this.checkCoinsedence(0,1,2)\n    this.checkCoinsedence(0,4,8)\n    this.checkCoinsedence(0,3,6)\n\n    this.checkCoinsedence(1,4,7)\n\n    this.checkCoinsedence(2,4,6)\n    this.checkCoinsedence(2,5,8)  \n\n    this.checkCoinsedence(3,4,5)\n\n    this.checkCoinsedence(6,7,8)\n  }\n\n  checkCoinsedence(x1,x2,x3){\n    if (this.cells[x1] && this.cells[x1]===this.cells[x2] && this.cells[x1]===this.cells[x3]) this.Signal(x1)\n  }\n\n  Signal(winer){\n    if (this.cells[winer]===\"user\")  {\n      setTimeout(()=>alert(\"yoy've win\"),100)\n      localStorage.setItem('yourWin',+this.state.yourWin+1)\n      this.setState({\n        yourWin:+this.state.yourWin+1\n      })\n    }\n    if (this.cells[winer]===\"comp\")  {\n      setTimeout(()=>alert(\"yoy've lost\"),100)\n      localStorage.setItem('compWin',+this.state.compWin+1)\n      this.setState({\n        compWin:+this.state.compWin+1\n      })\n    }\n    this.gameContinue=false\n  }\n\n  computerMove(){\n    this.state.level===\"easy\" && this.randomCell()\n    if (this.state.level===\"middle\"){\n      this.twoOfThree=false\n      this.block=false\n      this.analize()\n      !this.twoOfThree && this.randomCell()\n    }\n    if (this.state.level===\"hard\"){\n      this.twoOfThree=false\n      this.block=false\n      this.analize()\n      if (!this.twoOfThree && !this.cells[4]) {return this.cells[4]=\"comp\"}\n      if (!this.twoOfThree && !this.cells[0] && !this.cells[8]) {return this.cells[0]=\"comp\"}\n      if (!this.twoOfThree && !this.cells[2] && !this.cells[6] && !this.cells[1]) {return this.cells[2]=\"comp\"}\n      if (!this.twoOfThree && !this.cells[6] && !this.cells[2] && !this.cells[3]) {return this.cells[6]=\"comp\"}\n      if (!this.twoOfThree && !this.cells[3] && !this.cells[5] ) {return this.cells[3]=\"comp\"}  \n      if (!this.twoOfThree && !this.cells[1] && !this.cells[7] ) {return this.cells[1]=\"comp\"}  \n    }\n  }\n\n  analize(){\n    this.findTwoOfThree(0,1,2)\n      this.findTwoOfThree(0,2,1)\n      this.findTwoOfThree(0,3,6)\n      this.findTwoOfThree(0,6,3)\n      this.findTwoOfThree(0,4,8)\n      this.findTwoOfThree(0,8,4)\n\n      this.findTwoOfThree(1,2,0)\n      this.findTwoOfThree(1,4,7)\n      this.findTwoOfThree(1,7,4)\n\n      this.findTwoOfThree(2,4,6)\n      this.findTwoOfThree(2,6,4)\n      this.findTwoOfThree(2,5,8)\n      this.findTwoOfThree(2,8,5)\n\n      this.findTwoOfThree(3,4,5)\n      this.findTwoOfThree(3,5,4)\n      this.findTwoOfThree(3,6,0)\n\n      this.findTwoOfThree(4,5,3)\n      this.findTwoOfThree(4,6,2)\n      this.findTwoOfThree(4,7,1)\n      this.findTwoOfThree(4,8,0)\n\n      this.findTwoOfThree(5,8,2)\n\n      this.findTwoOfThree(6,7,8)\n      this.findTwoOfThree(6,8,7)\n\n      this.findTwoOfThree(7,8,6)\n  }\n\n  findTwoOfThree(x1,x2,x3){\n    if (this.cells[x1] && !this.cells[x3] && this.cells[x1]===this.cells[x2] & !this.block) {\n      this.cells[x3]=\"comp\"\n      this.block=true\n      this.twoOfThree=true\n    } \n  }\n\n  randomCell(){\n     let number=null;\n      for (let i=0;i<1000;i++){\n       number=Math.floor(Math.random() * 9);\n       if (this.cells[number]===undefined) return this.cells[number]=\"comp\";\n      }\n  }\n\n  changeUserSing(){\n    this.setState({\n        userSign:this.state.compSign,\n        compSign:this.state.userSign,\n      })\n  }\n\n  changeFirstStep(){\n    if (this.state.firstStep===\"you\"){\n      this.setState({\n        firstStep: \"comp\"\n      })\n      this.computerMove()\n    }\n  }\n\n  buttons(level){\n    let name=\"btn\"\n    if (level===this.state.level) {name=\"btn btn-danger\"}\n    return(\n      <button\n        className={name}\n        onClick={()=>this.changeLevel(level)}\n      >\n        {level}\n      </button>\n      )\n  }\n\n  changeLevel(level){\n    this.setState({\n      level\n    })\n    localStorage.setItem('level',level)\n  }\n\n  cell(numberCell){\n    let Name=\"borderRight\"\n    if (numberCell===2 || numberCell===5 || numberCell===8) {Name=null}\n\n    return(\n      <td \n        className={Name}\n        onClick={()=>this.userMove(numberCell)}\n      > \n        {(this.cells[numberCell]===\"user\") && this.state.userSign}\n        {(this.cells[numberCell]===\"comp\") && this.state.compSign}\n      </td>\n      )\n  }\n\n  reload(){\n    window.location.reload()\n  }\n\n  render() {\n    return (\n      <center >\n      <div className=\"container\">\n        \n          <span>Score</span><br/>\n          <span>You  {this.state.yourWin} - {this.state.compWin} comp</span><br/>\n          <button onClick={this.reload} className=\"btn btn-info\" style={{width:\"250px\"}}>Restart</button><br/>\n          <div className=\"row\">\n          <div className=\"col-md-1\">\n          </div>\n          <div className=\"col-md-3\">\n            <span>Level</span><br/>\n            {this.buttons(\"easy\")}<br/>\n            {this.buttons(\"middle\")}<br/>\n            {this.buttons(\"hard\")}<br/>\n          </div>\n          <div className=\"col\">\n            <table>\n              <tbody>\n                <tr className=\"borderBottom\">\n                  {this.cell(0)}\n                  {this.cell(1)}\n                  {this.cell(2)}\n                </tr>\n                <tr className=\"borderBottom\">\n                  {this.cell(3)}\n                  {this.cell(4)}\n                  {this.cell(5)}\n                </tr>\n                <tr>\n                  {this.cell(6)}\n                  {this.cell(7)}\n                  {this.cell(8)}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"col-md-3\">\n            <span>First step</span><br/>\n            <button\n              className=\"btn\"\n              onClick={this.changeFirstStep}\n            >{this.state.firstStep}</button>\n            <br/><span>Change sign</span><br/>\n            <button\n              className=\"btn\"\n              onClick={()=>this.changeUserSing()}\n            >You - {this.state.userSign}</button><br/>\n            <button\n              className=\"btn\"\n              onClick={()=>this.changeUserSing()}\n            >Computer - {this.state.compSign}</button>\n          </div> \n          <div className=\"col-md-1\">\n           </div>\n        </div>\n      </div>\n      </center>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}